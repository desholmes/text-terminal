{"version":3,"sources":["modules/template.js","../package.json","modules/default-commands.js","modules/text-terminal.js","index.js"],"names":["prompt","separator","module","exports","name","version","description","main","scripts","start","build","author","license","devDependencies","sass","clear","terminal","output","package","TextTerminal","configProps","console","log","containerId","commands","welcome","containerEl","document","getElementById","Error","Object","assign","defaultCommands","history","localStorage","JSON","parse","historyCursor","length","createDom","addListeners","classList","add","insertAdjacentHTML","container","querySelector","command","input","window"],"mappings":"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","file":"src.37c1cc2a.js","sourceRoot":"../src","sourcesContent":["export default (prompt, separator) => (`\n  <div class=\"container\">\n    <output></output>\n    <div class=\"command\">\n      <div class=\"prompt\">${prompt}${separator}</div>\n      <input class=\"input\" spellcheck=\"false\" autofocus />\n    </div>\n  </div>\n`);","module.exports={name:\"text-term\",version:\"0.1.0\",description:\"\",main:\"index.js\",scripts:{start:\"parcel ./src/index.html\",build:\"parcel build ./src/index.html\"},author:\"\",license:\"MIT\",devDependencies:{\"parcel-bundler\":\"^1.12.4\",sass:\"^1.28.0\"}};","import package from '../../package.json';\n\nexport default {\n  clear: terminal => terminal.clear(),\n\n  version: terminal => terminal.output(`Text Terminal v${package.version}`),\n\n};","import template from \"./template\";\nimport { defaultCommands } from \"./default-commands\";\n\nclass TextTerminal {\n  #id = \"TextTerminal\";\n  #dom = {};\n  commands = {};\n  history = [];\n  historyCursor = 0;\n  prompt;\n  separator;\n  welcome;\n\n  constructor(configProps = {}) {\n    console.log(\"constructor::TextTerminal\");\n\n    const {\n      containerId = \"text-terminal\",\n      commands = {},\n      prompt = \"\",\n      welcome = \"Welcome!\",\n      separator = \":\",\n    } = configProps;\n\n    const containerEl = document.getElementById(containerId);\n\n    if (!containerEl) {\n      throw Error(`Container #${containerId} does not exist!`);\n    }\n\n    this.commands = Object.assign({}, commands, defaultCommands);\n    this.history = localStorage[this.#id]\n      ? JSON.parse(localStorage[this.#id])\n      : [];\n    this.historyCursor = this.history.length;\n    this.prompt = prompt;\n    this.separator = separator;\n    this.welcome = welcome;\n\n    this.createDom(containerEl);\n    this.addListeners();\n\n    if (this.welcome) this.output(this.welcome);\n  }\n\n  addListeners() {}\n\n  createDom(containerEl) {\n    containerEl.classList.add(this.#id);\n    containerEl.insertAdjacentHTML(\n      \"beforeEnd\",\n      template(this.prompt, this.separator)\n    );\n\n    this.#dom = {\n      container: containerEl.querySelector(\".container\"),\n      output: containerEl.querySelector(\"output\"),\n      command: containerEl.querySelector(\".command\"),\n      input: containerEl.querySelector(\".command .input\"),\n      prompt: containerEl.querySelector(\".command .prompt\"),\n    };\n  }\n\n  output() {}\n\n}\n\nif (window) window.TextTerminal = TextTerminal;\n\nexport default TextTerminal;\n","import TextTerminal from './modules/text-terminal';\n\nconst terminal = new TextTerminal({prompt:\"Bash\"});"]}